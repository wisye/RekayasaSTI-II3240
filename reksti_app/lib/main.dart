import 'package:flutter/material.dart';
import 'package:intl/date_symbol_data_local.dart'; // Import for initializeDateFormatting

// 1. IMPORT YOUR app.dart FILE
//    *******************************************************************
//    *** CRITICAL: Replace 'your_project_name' with the actual     ***
//    *** name of your project (the 'name:' field in pubspec.yaml). ***
//    *******************************************************************
import 'package:reksti_app/app.dart'; // Ensure this path is correct

// --- OPTIONAL: Import for initial setup (examples) ---
// If you plan to use Firebase:
// import 'package:firebase_core/firebase_core.dart';
// import 'firebase_options.dart'; // Usually generated by FlutterFire CLI

// If you plan to use a service locator like GetIt:
// import 'package:your_project_name/core/di/injection_container.dart' as di;

// The 'main' function is the entry point of your Flutter application.
void main() async {
  // 'async' is needed if you have 'await' for setup tasks.
  // If no async setup, you can remove 'async' and the line below.

  // 2. ENSURE FLUTTER BINDINGS ARE INITIALIZED
  //    This is crucial if your 'main' function is 'async' and you perform
  //    operations before runApp().
  WidgetsFlutterBinding.ensureInitialized();
  await initializeDateFormatting('id_ID', null);
  // 3. --- OPTIONAL: PERFORM ESSENTIAL INITIAL SETUP HERE ---
  //    This is where you would initialize services or configurations
  //    that your app needs before the UI is built.

  // Example: Firebase Initialization (uncomment if you use Firebase)
  /*
  if (Firebase.apps.isEmpty) { // Check to prevent re-initialization
    await Firebase.initializeApp(
      // If you used FlutterFire CLI, 'firebase_options.dart' will be generated.
      // options: DefaultFirebaseOptions.currentPlatform,
    );
    print('Firebase initialized');
  } else {
    print('Firebase already initialized');
  }
  */

  // Example: Dependency Injection Setup (uncomment if you use a service locator)
  /*
  await di.init(); // Initialize your dependency injector (e.g., GetIt)
  print('Dependency Injection initialized');
  */

  // Example: Initialize other global services
  /*
  await MyAnalyticsService.initialize();
  await MyCrashReportingService.initialize();
  */

  // --- End of Optional Initial Setup ---

  // 4. RUN YOUR APPLICATION
  //    'MyApp' should be the class defined in your 'app.dart' file
  //    that returns your MaterialApp.
  runApp(const MyApp());
}
